#!/usr/bin/env ruby

require_relative '../config/environment'

puts "======================="
puts "Welcome to Tic-Tac-Toe!"
puts "======================="

def start
  puts " "
  puts "Please select number of players (0 | 1 | 2 | wargames):"
  puts "    Type '0' to start a game between two (2) computers"
  puts "    Type '1' to start a game versus the computer"
  puts "    Type '2' to start a game with two (2) players"
  puts "    Type 'wargames' to simulate 100 games of Tic-Tac-Toe between two (2) computer AI"
  puts " "
  mode = gets.strip.downcase

  until mode == "0" || mode == "1" || mode == "2" || mode == "wargames"
    puts "Please select number of players (0 | 1 | 2 | wargames):"
    mode = gets.strip.downcase
  end

  case mode
  when "0"
    Game.new(Players::Computer.new("X"), Players::Computer("O"), Board.new).play
  when "1"
    puts "Who will go first (X)? (1 for PLAYER | 2 for COMPUTER):"
    first_player = gets.input

    until first_player == "1" || first_player == "2"
      puts "Who will go first (X)? (1 for PLAYER | 2 for COMPUTER):"
      first_player = gets.input
    end

    case first_player
    when "1"
      Game.new(Players::Human.new("X"), Players::Computer("O"), Board.new).play
    when "2"
      Game.new(Players::Computer.new("X"), Players::Human("O"), Board.new).play
    end
  when "2"
    puts "Who will go first (X)? (1 for PLAYER#1 | 2 for PLAYER#2):"
    first_player = gets.input

    until first_player == "1" || first_player == "2"
      puts "Who will go first (X)? (1 for PLAYER#1 | 2 for PLAYER#2):"
      first_player = gets.input
    end

    case first_player
    when "1"
      Game.new(Players::Human.new("X"), Players::Human("O"), Board.new).play
    when "2"
      Game.new(Players::Human.new("O"), Players::Human("X"), Board.new).play
    end
  when "wargames"
    # 2.times do
    #   Game.new(Players::Computer.new("X"), Players::Computer("O"), Board.new)
    # end
    "Under construction!"
  end
end

def restart

  puts '  _____          __  __ ______    ______      ________ _____  '
  puts ' / ____|   /\   |  \/  |  ____|  / __ \ \    / /  ____|  __ \ '
  puts '| |  __   /  \  | \  / | |__    | |  | \ \  / /| |__  | |__) |'
  puts '| | |_ | / /\ \ | |\/| |  __|   | |  | |\ \/ / |  __| |  _  / '
  puts '| |__| |/ ____ \| |  | | |____  | |__| | \  /  | |____| | \ \ '
  puts ' \_____/_/    \_\_|  |_|______|  \____/   \/   |______|_|  \_\'

  puts "Game over! Play again? (y | n)"
  response = gets.strip.downcase

  case response
  when "y" then start
  when "n" then "Thank you for playing. See you next time!"
  else restart
  end
end

start
